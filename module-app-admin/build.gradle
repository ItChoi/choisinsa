plugins {
    id 'org.springframework.boot' version '2.7.2' // Spring Boot 플러그인 추가
    id 'io.spring.dependency-management' version '1.0.12.RELEASE' // Dependency Management 플러그인 추가
    id 'java' // Java 플러그인 추가
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

configurations {
    // config 추가
    asciidoctorExtensions
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation project(":module-common")
    implementation project(":module-core")

    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // 추가 adoc 파일들을 연산으로 사용할 수 있게 해주며, html로 export할 수 있게 해줌
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    // 카카오서트 - 카카오페이 본인인증
    implementation 'kr.co.linkhub:kakaocert-spring-boot-starter:1.2.0'

    // h2
    //testImplementation 'com.h2database:h2:1.4.200'

    // temp docker-compose test -> 삭제 예정 START
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'org.redisson:redisson-spring-boot-starter:3.17.7'
    // temp docker-compose test -> 삭제 예정 END

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
}

//sourceSets {
//    main {
//        resources {
//            srcDirs += [
//                    project(':module-configuration').sourceSets.main.resources
//            ]
//        }
//    }
//}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
}

bootJar { // SpringBoot 1.5 이하일 경우 jar
    mainClass = 'com.mall.choisinsa.AdminApplication'
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor

    from file("build/docs/asciidoc/")
    into file("src/main/resources/static/docs/asciidoc")
}

build {
    dependsOn copyDocument
}

jar {
    enabled = false
}